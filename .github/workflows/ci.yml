name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ticketing-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-and-smoke:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:

      POSTGRES_DB: ticketing
      POSTGRES_USER: ticket
      POSTGRES_PASSWORD: ticketpw
      DB_PORT_HOST: 5432

      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/ticketing
      SPRING_DATASOURCE_USERNAME: ticket
      SPRING_DATASOURCE_PASSWORD: ticketpw
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      APP_PORT_HOST: 8080

      PGADMIN_DEFAULT_EMAIL: ci@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_PORT_HOST: 5050

      PROMETHEUS_PORT_HOST: 9090
      GRAFANA_PORT_HOST: 3000

      JAVA_TOOL_OPTIONS: "-XX:+UseZGC -XX:MaxRAMPercentage=75"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Maven build (skip tests first for faster feedback)
        run: mvn -B -DskipTests clean package

      - name: Run unit tests
        run: mvn -B test

      - name: Generate .env for CI (not committed)
        run: |
          cat > .env <<EOF
          POSTGRES_DB=${POSTGRES_DB}
          POSTGRES_USER=${POSTGRES_USER}
          POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
          DB_PORT_HOST=${DB_PORT_HOST}

          SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
          SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
          SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
          SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
          SPRING_JPA_HIBERNATE_DDL_AUTO=${SPRING_JPA_HIBERNATE_DDL_AUTO}
          APP_PORT_HOST=${APP_PORT_HOST}

          PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
          PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
          PGADMIN_PORT_HOST=${PGADMIN_PORT_HOST}

          PROMETHEUS_PORT_HOST=${PROMETHEUS_PORT_HOST}
          GRAFANA_PORT_HOST=${GRAFANA_PORT_HOST}

          JAVA_TOOL_OPTIONS=${JAVA_TOOL_OPTIONS}
          EOF
          echo "Created CI .env file"

      - name: Build & start Docker Compose
        run: docker compose up -d --build

      - name: Wait for app health
        run: |
          for i in {1..30}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:${APP_PORT_HOST}/actuator/health || true)
            if [ "$code" = "200" ]; then
              echo "App is healthy."
              exit 0
            fi
            echo "Waiting for app... ($i)"
            sleep 2
          done
          echo "App did not become healthy in time."
          exit 1

      - name: Smoke check - Swagger UI reachable
        run: |
          curl -f http://localhost:${APP_PORT_HOST}/swagger-ui/index.html >/dev/null
          echo "Swagger UI reachable."

      - name: Show container statuses
        if: always()
        run: docker compose ps

      - name: Dump app logs on failure
        if: failure()
        run: docker compose logs app

      - name: Teardown
        if: always()
        run: docker compose down -v
