version: "3.9"

services:
  db:
    image: postgres:16
    container_name: ticketing-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT_HOST:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ticketing-app
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Spring profile
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-docker}

      # DB ayarlarını .env'den al
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO:-validate}

      # (opsiyonel) JVM memory ve GC
      JAVA_TOOL_OPTIONS: ${JAVA_TOOL_OPTIONS:-"-XX:+UseZGC -XX:MaxRAMPercentage=75"}
    ports:
      - "${APP_PORT_HOST:-8080}:8080"

  pgadmin:
    image: dpage/pgadmin4:8.11
    container_name: ticketing-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT_HOST:-5050}:80"
    depends_on:
      db:
        condition: service_healthy

  prometheus:
    image: prom/prometheus:v2.55.1
    container_name: ticketing-prometheus
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "${PROMETHEUS_PORT_HOST:-9090}:9090"
    depends_on:
      app:
        condition: service_started

  grafana:
    image: grafana/grafana:11.1.4
    container_name: ticketing-grafana
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD:-admin123}
    ports:
      - "${GRAFANA_PORT_HOST:-3000}:3000"
    volumes:
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./docker/grafana/dashboards_json:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus

volumes:
  db_data:
