apiVersion: v1
kind: Service
metadata:
  name: ticketing-app
  namespace: ticketing
spec:
  type: ClusterIP
  selector:
    app: ticketing-app
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ticketing-app
  namespace: ticketing
spec:
  replicas: 2
  selector:
    matchLabels: { app: ticketing-app }
  template:
    metadata:
      labels: { app: ticketing-app }
    spec:
      containers:
        - name: app
          image: ticketing-app:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              valueFrom: { configMapKeyRef: { name: ticketing-config, key: SPRING_PROFILES_ACTIVE } }
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              valueFrom: { configMapKeyRef: { name: ticketing-config, key: SPRING_JPA_HIBERNATE_DDL_AUTO } }
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://postgres.ticketing.svc.cluster.local:5432/ticketing
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom: { secretKeyRef: { name: ticketing-secrets, key: POSTGRES_USER } }
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom: { secretKeyRef: { name: ticketing-secrets, key: POSTGRES_PASSWORD } }
          readinessProbe:
            httpGet: { path: /actuator/health, port: 8080 }
            initialDelaySeconds: 15
            periodSeconds: 5
          livenessProbe:
            httpGet: { path: /actuator/health, port: 8080 }
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            requests: { cpu: "250m", memory: "512Mi" }
            limits:   { cpu: "1",    memory: "1Gi" }
